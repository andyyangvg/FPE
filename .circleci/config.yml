version: 2.1

#orbs:
#  maven: "circleci/maven@1.0.3"

parameters:
  aws_account_id:
    description: ""
    type: string
    default: "883127560329"
  aws_profile:
    description: ""
    type: string
    default: "dev/vault"
  aws_region:
    description: ""
    type: string
    default: "us-west-2"
  aws_role:
    description: ""
    type: string
    default: "arn:aws:iam::883127560329:role/VGSStageDeploy"

#executors:
#  "jdk8":
#    description: "OpenJDK 8"
#    docker:
#      - image: "cimg/openjdk:8.0"
#  "jdk11":
#    description: "OpenJDK 11"
#    docker:
#      - image: "cimg/openjdk:11.0"
#  "jdk14":
#    description: "OpenJDK 14"
#    docker:
#      - image: "cimg/openjdk:14.0"
#  "maven8":
#    description: "Maven on JDK 8"
#    docker:
#      - image: "maven:3.6-openjdk-8"

commands:
  maven:
    description: "Run Maven"
    parameters:
      goals:
        description: "The Maven goals to run."
        type: string
        default: "clean verify site"
      executable:
        description: "The Maven executable."
        type: string
        default: "mvn"
    steps:
      - run:
          command: << parameters.executable >> << parameters.goals >>

jobs:
  "setup":
    description: "make Maven configuration files"
    docker:
      - image: "maven:3.6-openjdk-8"
    environment:
      AWS_ACCOUNT_ID: << pipeline.parameters.aws_account_id >>
      AWS_PROFILE: << pipeline.parameters.aws_profile >>
      AWS_DEFAULT_REGION: << pipeline.parameters.aws_region >>
      AWS_REGION: << pipeline.parameters.aws_region >>
    steps:
      - run:
          name: "Generate Maven settings."
          command: |
            #!/usr/bin/env bash
            mkdir -p ~/.m2
      - run:
          name: "Generate AWS credentials file"
          command: |
            #!/usr/bin/env bash
            mkdir -p ~/.aws
            echo "
            [default]
            region = << pipeline.parameters.aws_region >>
            aws_access_key_id = $AWS_ACCESS_KEY_ID
            aws_secret_access_key = $AWS_SECRET_ACCESS_KEY

            [dev/vault]
            region = << pipeline.parameters.aws_region >>
            role_arn = << pipeline.parameters.aws_role >>
            source_profile = default
            " >> ~/.aws/credentials
      - persist_to_workspace:
          root: "~"
          paths:
#            - ".m2/settings.xml"
#            - ".m2/toolchain.xml"
            - ".m2"
            - ".aws"
  "build":
    description: "foo"
    docker:
      - image: "maven:3.6-openjdk-8"
#    working_directory: "~/project"
    environment:
      AWS_ACCOUNT_ID: << pipeline.parameters.aws_account_id >>
      AWS_PROFILE: << pipeline.parameters.aws_profile >>
      AWS_DEFAULT_REGION: << pipeline.parameters.aws_region >>
      AWS_REGION: << pipeline.parameters.aws_region >>
    steps:
      - attach_workspace:
          at: "~"
      - checkout:
          path: "."
      - restore_cache:
          name: "Restoring Cache"
          keys:
            - maven-fpelib-{{ checksum "pom.xml" }}
            - "maven-fpelib"
            - "maven"
      - maven:
          goals: "dependency:go-offline"
      - maven:
          goals: "clean verify"
      - store_test_results:
          path: "target/surefire-reports"
      - maven:
          goals: "site"
      - store_artifacts:
          path: "target"
      - maven:
          goals: "deploy"
      - save_cache:
          name: "Saving Cache"
          when: "always"
          key: maven-fpelib-{{ checksum "pom.xml" }}
          paths:
            - "~/.m2/repository"
#  "deploy":
#    description: "Deploy to Artifactory"
#    steps:
#      - run:
#          name: "deploy"
#          command: "curl -fL https://getcli.jfrog.io | sh"
#          shell: "/bin/bash -eo pipefail"
#          environment: { }
#          background: false
#          working_directory: "."
#          no_output_timeout: "10m"
#          when: "on_success"
#      - run:
#          environment:
#            - name: "URL"
#              value: "https://kentrosenkoettervgsio.jfrog.io/artifactory/"
#            - name: "CI"
#              value: "true"
#          command: |
#            ./jfrog rt config --url $URL --user $USER --apikey $APIKEY --interactive=false
#            ./jfrog rt u "multi*/*.jar" libs-snapshot-local --build-name=foobar --build-number=$CIRCLE_BUILD_NUM --flat=false
#            ./jfrog rt bce foobar $CIRCLE_BUILD_NUM
#            ./jfrog rt bp foobar $CIRCLE_BUILD_NUM
#          background: false

workflows:
  version: 2
  "java-build":
    jobs:
      - "setup":
          context: artifact-publisher
      - "build": {}
        runAfter:
          - "setup"
#      - "maven/test":
#          name: "build-test"
#          command: "clean verify site"
#          executor: "maven8"
#          post-steps:
#            - "store_artifacts":
#                path: "target"
